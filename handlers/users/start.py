from aiogram import types
from aiogram.types import ContentType, Message

from photos import *
from aiogram.types import InputFile
from keyboards.default.text_button import start_button, menu

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.dispatcher.filters.builtin import CommandStart

from loader import dp, db, bot
import sqlite3



@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    name = message.from_user.full_name
    try: 
        db.add_user(id=message.from_user.id, name=name)
    except sqlite3.IntegrityError as err:
        print(err)
    
    photo = InputFile(path_or_bytesio="photos/photo1.jpg")
    await bot.send_photo(chat_id=message.from_user.id,
                        photo=photo,
                        caption=(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n\n'
                        f'–Ø —Ç–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫ üòä\n' 
                        f'–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–∞–º—ã—Ö –≤—ã–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø–æ–¥ 0%!\n'
                        f'–î–ª—è —ç—Ç–æ–≥–æ –º–Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n'
                        f'–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø—É—Å—Ç–∏—Ç—å¬ªüëá'), reply_markup=start_button)


@dp.message_handler(Command("data"))
async def database(message: types.Message):
    count_users = db.count_users()[0]
    await message.answer(
        "\n".join([
            f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!',
            '–¢–∏ –µ—Å—Ç—å –≤ –±–∞–∑–µ',
            f'–í –±–∞–∑–µ <b>{count_users}</b> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        ])
    )


@dp.message_handler(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å üöÄ")
async def user_old(message: types.Message, state:FSMContext):
    await message.answer(f"–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç ?\n"
                        f"–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç...")
    await state.set_state("years")


@dp.message_handler(state="years")
async def enter_old(message: types.Message, state: FSMContext):
    years = message.text
    db.update_user_age(age=years, id=message.from_user.id)

    photo = InputFile(path_or_bytesio='photos/photo2.jpg')
    await bot.send_photo(chat_id=message.from_user.id,
                        photo=photo,
                        caption=(f'–ë–ª–∞–≥–æ–¥–∞—Ä—é —Ç–µ–±—è, {message.from_user.full_name}!\n'
                         f'–ß—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –±–∞–Ω–∫, –∫–æ—Ç–æ—Ä—ã–π –≥–æ—Ç–æ–≤ –¥–∞—Ç—å —Ç–µ–±–µ –¥–µ–Ω—å–≥–∏\n'
                         f'–Ω–∞ —Å–∞–º—ã—Ö –ª—É—á—à–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö\n' 
                         f'–≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π "üè™–ü–æ–¥–æ–±—Ä–∞—Ç—å –±–∞–Ω–∫"'
                         f'–¢–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏–µ '), reply_markup=menu)
                    
    await state.finish()

@dp.message_handler(text="üìù–ú–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
async def My_setting(message: Message):
    user = db.select_user(id=message.from_user.id)
    await message.answer(f"–°—Ç—Ä–∞–Ω–∞: –£–∫—Ä–∞—ó–Ω–∞\n"
                         f"–í–æ–∑—Ä–∞—Å—Ç: {user}")

